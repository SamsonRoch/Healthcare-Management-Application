// import 'package:flutter/material.dart';
// import 'package:patient_management_app/config/service_locator.dart';
// import 'package:patient_management_app/data/models/patient_model.dart';
// import 'package:patient_management_app/data/repositories/patient_repository.dart';
// import 'package:patient_management_app/ui/theme/app_theme.dart';
// import 'package:patient_management_app/ui/widgets/app_scaffold.dart';

// class AddPatientScreen extends StatefulWidget {
//   const AddPatientScreen({Key? key}) : super(key: key);

//   @override
//   State<AddPatientScreen> createState() => _AddPatientScreenState();
// }

// class _AddPatientScreenState extends State<AddPatientScreen> {
//   final _formKey = GlobalKey<FormState>();
//   final PatientRepository _patientRepository = locator<PatientRepository>();
  
//   final _nameController = TextEditingController();
//   final _emailController = TextEditingController();
//   final _phoneController = TextEditingController();
//   final _addressController = TextEditingController();
//   final _dobController = TextEditingController();
//   final _emergencyContactController = TextEditingController();
//   final _emergencyPhoneController = TextEditingController();
  
//   String _selectedGender = 'Male';
//   String _selectedBloodGroup = 'A+';
//   List<String> _allergies = [];
//   List<String> _chronicConditions = [];
//   bool _isLoading = false;
  
//   @override
//   void dispose() {
//     _nameController.dispose();
//     _emailController.dispose();
//     _phoneController.dispose();
//     _addressController.dispose();
//     _dobController.dispose();
//     _emergencyContactController.dispose();
//     _emergencyPhoneController.dispose();
//     super.dispose();
//   }
  
//   Future<void> _selectDate(BuildContext context) async {
//     final DateTime? picked = await showDatePicker(
//       context: context,
//       initialDate: DateTime.now(),
//       firstDate: DateTime(1900),
//       lastDate: DateTime.now(),
//     );
//     if (picked != null) {
//       setState(() {
//         _dobController.text = "${picked.year}-${picked.month.toString().padLeft(2, '0')}-${picked.day.toString().padLeft(2, '0')}";
//       });
//     }
//   }
  
//   void _addAllergy() {
//     showDialog(
//       context: context,
//       builder: (context) {
//         final controller = TextEditingController();
//         return AlertDialog(
//           title: const Text('Add Allergy'),
//           content: TextField(
//             controller: controller,
//             decoration: const InputDecoration(hintText: 'Enter allergy'),
//           ),
//           actions: [
//             TextButton(
//               onPressed: () => Navigator.pop(context),
//               child: const Text('CANCEL'),
//             ),
//             TextButton(
//               onPressed: () {
//                 if (controller.text.isNotEmpty) {
//                   setState(() {
//                     _allergies.add(controller.text);
//                   });
//                 }
//                 Navigator.pop(context);
//               },
//               child: const Text('ADD'),
//             ),
//           ],
//         );
//       },
//     );
//   }
  
//   void _addChronicCondition() {
//     showDialog(
//       context: context,
//       builder: (context) {
//         final controller = TextEditingController();
//         return AlertDialog(
//           title: const Text('Add Chronic Condition'),
//           content: TextField(
//             controller: controller,
//             decoration: const InputDecoration(hintText: 'Enter chronic condition'),
//           ),
//           actions: [
//             TextButton(
//               onPressed: () => Navigator.pop(context),
//               child: const Text('CANCEL'),
//             ),
//             TextButton(
//               onPressed: () {
//                 if (controller.text.isNotEmpty) {
//                   setState(() {
//                     _chronicConditions.add(controller.text);
//                   });
//                 }
//                 Navigator.pop(context);
//               },
//               child: const Text('ADD'),
//             ),
//           ],
//         );
//       },
//     );
//   }
  
//   Future<void> _savePatient() async {
//     if (!_formKey.currentState!.validate()) return;
    
//     setState(() {
//       _isLoading = true;
//     });
    
//     try {
//       final newPatient = Patient(
//         id: '', // Will be generated by the repository
//         name: _nameController.text,
//         email: _emailController.text.isEmpty ? null : _emailController.text,
//         phoneNumber: _phoneController.text.isEmpty ? null : _phoneController.text,
//         address: _addressController.text.isEmpty ? null : _addressController.text,
//         //dateOfBirth: _dobController.text,
//         gender: _selectedGender,
//         bloodGroup: _selectedBloodGroup,
//         emergencyContact: _emergencyContactController.text.isEmpty ? null : _emergencyContactController.text,
//         emergencyContactPhone: _emergencyPhoneController.text.isEmpty ? null : _emergencyPhoneController.text,
//         allergies: _allergies.isEmpty ? null : _allergies,
//         chronicConditions: _chronicConditions.isEmpty ? null : _chronicConditions,
//         medicalHistory: {}, // Empty initially
//       );
      
//       //await _patientRepository.addPatient(newPatient);
      
//       if (mounted) {
//         ScaffoldMessenger.of(context).showSnackBar(
//           const SnackBar(content: Text('Patient added successfully')),
//         );
//         Navigator.pop(context); // Return to previous screen
//       }
//     } catch (e) {
//       if (mounted) {
//         ScaffoldMessenger.of(context).showSnackBar(
//           SnackBar(content: Text('Error adding patient: ${e.toString()}')),
//         );
//       }
//     } finally {
//       if (mounted) {
//         setState(() {
//           _isLoading = false;
//         });
//       }
//     }
//   }
  
//   @override
//   Widget build(BuildContext context) {
//     return AppScaffold(
//       title: 'Add New Patient',
//       showAppBar: true,
//       showDrawer: true,
//       body: _isLoading
//           ? const Center(child: CircularProgressIndicator())
//           : SingleChildScrollView(
//               padding: const EdgeInsets.all(16.0),
//               child: Form(
//                 key: _formKey,
//                 child: Column(
//                   crossAxisAlignment: CrossAxisAlignment.start,
//                   children: [
//                     // Personal Information Section
//                     const Text(
//                       'Personal Information',
//                       style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
//                     ),
//                     const SizedBox(height: 16),
                    
//                     // Name Field
//                     TextFormField(
//                       controller: _nameController,
//                       decoration: const InputDecoration(
//                         labelText: 'Full Name',
//                         border: OutlineInputBorder(),
//                       ),
//                       validator: (value) {
//                         if (value == null || value.isEmpty) {
//                           return 'Please enter patient name';
//                         }
//                         return null;
//                       },
//                     ),
//                     const SizedBox(height: 16),
                    
//                     // Gender Selection
//                     DropdownButtonFormField<String>(
//                       value: _selectedGender,
//                       decoration: const InputDecoration(
//                         labelText: 'Gender',
//                         border: OutlineInputBorder(),
//                       ),
//                       items: ['Male', 'Female', 'Other']
//                           .map((gender) => DropdownMenuItem(
//                                 value: gender,
//                                 child: Text(gender),
//                               ))
//                           .toList(),
//                       onChanged: (value) {
//                         if (value != null) {
//                           setState(() {
//                             _selectedGender = value;
//                           });
//                         }
//                       },
//                     ),
//                     const SizedBox(height: 16),
                    
//                     // Date of Birth Field
//                     TextFormField(
//                       controller: _dobController,
//                       decoration: InputDecoration(
//                         labelText: 'Date of Birth',
//                         border: const OutlineInputBorder(),
//                         suffixIcon: IconButton(
//                           icon: const Icon(Icons.calendar_today),
//                           onPressed: () => _selectDate(context),
//                         ),
//                       ),
//                       readOnly: true,
//                       validator: (value) {
//                         if (value == null || value.isEmpty) {
//                           return 'Please enter date of birth';
//                         }
//                         return null;
//                       },
//                     ),
//                     const SizedBox(height: 16),
                    
//                     // Blood Group Selection
//                     DropdownButtonFormField<String>(
//                       value: _selectedBloodGroup,
//                       decoration: const InputDecoration(
//                         labelText: 'Blood Group',
//                         border: OutlineInputBorder(),
//                       ),
//                       items: ['A+', 'A-', 'B+', 'B-', 'AB+', 'AB-', 'O+', 'O-']
//                           .map((group) => DropdownMenuItem(
//                                 value: group,
//                                 child: Text(group),
//                               ))
//                           .toList(),
//                       onChanged: (value) {
//                         if (value != null) {
//                           setState(() {
//                             _selectedBloodGroup = value;
//                           });
//                         }
//                       },
//                     ),
//                     const SizedBox(height: 24),
                    
//                     // Contact Information Section
//                     const Text(
//                       'Contact Information',
//                       style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
//                     ),
//                     const SizedBox(height: 16),
                    
//                     // Phone Field
//                     TextFormField(
//                       controller: _phoneController,
//                       decoration: const InputDecoration(
//                         labelText: 'Phone Number',
//                         border: OutlineInputBorder(),
//                       ),
//                       keyboardType: TextInputType.phone,
//                     ),
//                     const SizedBox(height: 16),
                    
//                     // Email Field
//                     TextFormField(
//                       controller: _emailController,
//                       decoration: const InputDecoration(
//                         labelText: 'Email',
//                         border: OutlineInputBorder(),
//                       ),
//                       keyboardType: TextInputType.emailAddress,
//                     ),
//                     const SizedBox(height: 16),
                    
//                     // Address Field
//                     TextFormField(
//                       controller: _addressController,
//                       decoration: const InputDecoration(
//                         labelText: 'Address',
//                         border: OutlineInputBorder(),
//                       ),
//                       maxLines: 3,
//                     ),
//                     const SizedBox(height: 24),
                    
//                     // Emergency Contact Section
//                     const Text(
//                       'Emergency Contact',
//                       style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
//                     ),
//                     const SizedBox(height: 16),
                    
//                     // Emergency Contact Name
//                     TextFormField(
//                       controller: _emergencyContactController,
//                       decoration: const InputDecoration(
//                         labelText: 'Emergency Contact Name',
//                         border: OutlineInputBorder(),
//                       ),
//                     ),
//                     const SizedBox(height: 16),
                    
//                     // Emergency Contact Phone
//                     TextFormField(
//                       controller: _emergencyPhoneController,
//                       decoration: const InputDecoration(
//                         labelText: 'Emergency Contact Phone',
//                         border: OutlineInputBorder(),
//                       ),
//                       keyboardType: TextInputType.phone,
//                     ),
//                     const SizedBox(height: 24),
                    
//                     // Medical Information Section
//                     const Text(
//                       'Medical Information',
//                       style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
//                     ),
//                     const SizedBox(height: 16),
                    
//                     // Allergies
//                     Card(
//                       child: Padding(
//                         padding: const EdgeInsets.all(16.0),
//                         child: Column(
//                           crossAxisAlignment: CrossAxisAlignment.start,
//                           children: [
//                             Row(
//                               mainAxisAlignment: MainAxisAlignment.spaceBetween,
//                               children: [
//                                 const Text('Allergies', style: TextStyle(fontWeight: FontWeight.bold)),
//                                 TextButton.icon(
//                                   icon: const Icon(Icons.add),
//                                   label: const Text('Add'),
//                                   onPressed: _addAllergy,
//                                 ),
//                               ],
//                             ),
//                             if (_allergies.isEmpty)
//                               const Text('No allergies added')
//                             else
//                               Column(
//                                 children: _allergies
//                                     .map((allergy) => ListTile(
//                                           title: Text(allergy),
//                                           trailing: IconButton(
//                                             icon: const Icon(Icons.delete, color: Colors.red),
//                                             onPressed: () {
//                                               setState(() {
//                                                 _allergies.remove(allergy);
//                                               });
//                                             },
//                                           ),
//                                         ))
//                                     .toList(),
//                               ),
//                           ],
//                         ),
//                       ),
//                     ),
//                     const SizedBox(height: 16),
                    
//                     // Chronic Conditions
//                     Card(
//                       child: Padding(
//                         padding: const EdgeInsets.all(16.0),
//                         child: Column(
//                           crossAxisAlignment: CrossAxisAlignment.start,
//                           children: [
//                             Row(
//                               mainAxisAlignment: MainAxisAlignment.spaceBetween,
//                               children: [
//                                 const Text('Chronic Conditions', style: TextStyle(fontWeight: FontWeight.bold)),
//                                 TextButton.icon(
//                                   icon: const Icon(Icons.add),
//                                   label: const Text('Add'),
//                                   onPressed: _addChronicCondition,
//                                 ),
//                               ],
//                             ),
//                             if (_chronicConditions.isEmpty)
//                               const Text('No chronic conditions added')
//                             else
//                               Column(
//                                 children: _chronicConditions
//                                     .map((condition) => ListTile(
//                                           title: Text(condition),
//                                           trailing: IconButton(
//                                             icon: const Icon(Icons.delete, color: Colors.red),
//                                             onPressed: () {
//                                               setState(() {
//                                                 _chronicConditions.remove(condition);
//                                               });
//                                             },
//                                           ),
//                                         ))
//                                     .toList(),
//                               ),
//                           ],
//                         ),
//                       ),
//                     ),
//                     const SizedBox(height: 32),
                    
//                     // Save Button
//                     SizedBox(
//                       width: double.infinity,
//                       height: 50,
//                       child: ElevatedButton(
//                         onPressed: _savePatient,
//                         style: ElevatedButton.styleFrom(
//                           backgroundColor: AppTheme.primaryColor,
//                           foregroundColor: Colors.white,
//                         ),
//                         child: const Text('SAVE PATIENT', style: TextStyle(fontSize: 16)),
//                       ),
//                     ),
//                     const SizedBox(height: 24),
//                   ],
//                 ),
//               ),
//             ),
//     );
//   }
// }